/*Данная задача ориентирована на реальную работу с данными в формате JSON. Для решения мы будем использовать справочник ОКВЭД (Общероссийский классификатор видов экономической деятельности), который был размещен на web-портале data.gov.ru.
Необходимая вам информация о структуре данных содержится в файле structure-20190514T0000.json, а сами данные, которые вам потребуется декодировать, содержатся в файле data-20190514T0100.json. Файлы размещены в нашем репозитории на github.com.
Для того, чтобы показать, что вы действительно смогли декодировать документ вам необходимо в качестве ответа записать сумму полей global_id всех элементов, закодированных в файле.
*/
package main

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"os"
)

type AutoGenerated []struct {
	GlobalID       int    `json:"global_id"`
	SystemObjectID string `json:"system_object_id"`
	SignatureDate  string `json:"signature_date"`
	Razdel         string `json:"Razdel"`
	Kod            string `json:"Kod,omitempty"`
	Name           string `json:"Name"`
	Idx            string `json:"Idx"`
	Nomdescr       string `json:"Nomdescr,omitempty"`
}

func main() {
	var ag AutoGenerated
	//cчитываем файл
	file, err := os.Open("./data-20190514T0100.json")
	if err != nil {
		fmt.Println(err)
	}
	defer file.Close()
	data, err := ioutil.ReadAll(file)
	if err != nil {
		fmt.Println(err)
	}
	//декодируем данные в перем ag
	if err := json.Unmarshal(data, &ag); err != nil {
		fmt.Println(err)
	}
	var sum_Global_Id = 0
	//проходим по массиву и суммируем global_id
	for _, value := range ag {
		sum_Global_Id = sum_Global_Id + value.GlobalID
	}
	fmt.Printf("%v", sum_Global_Id)

}
